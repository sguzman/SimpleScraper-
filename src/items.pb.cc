// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/items.proto

#include "./items.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace items {
class PageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Page>
      _instance;
} _Page_default_instance_;
class Links_LinksEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Links_LinksEntry_DoNotUse>
      _instance;
} _Links_LinksEntry_DoNotUse_default_instance_;
class LinksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Links>
      _instance;
} _Links_default_instance_;
}  // namespace items
namespace protobuf_src_2fitems_2eproto {
void InitDefaultsPageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::items::_Page_default_instance_;
    new (ptr) ::items::Page();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::items::Page::InitAsDefaultInstance();
}

void InitDefaultsPage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPageImpl);
}

void InitDefaultsLinks_LinksEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_src_2fitems_2eproto::InitDefaultsPage();
  {
    void* ptr = &::items::_Links_LinksEntry_DoNotUse_default_instance_;
    new (ptr) ::items::Links_LinksEntry_DoNotUse();
  }
  ::items::Links_LinksEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsLinks_LinksEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinks_LinksEntry_DoNotUseImpl);
}

void InitDefaultsLinksImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_src_2fitems_2eproto::InitDefaultsLinks_LinksEntry_DoNotUse();
  {
    void* ptr = &::items::_Links_default_instance_;
    new (ptr) ::items::Links();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::items::Links::InitAsDefaultInstance();
}

void InitDefaultsLinks() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinksImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_9_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Page, link_10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Links_LinksEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Links_LinksEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Links_LinksEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Links_LinksEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Links, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::items::Links, links_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::items::Page)},
  { 15, 22, sizeof(::items::Links_LinksEntry_DoNotUse)},
  { 24, -1, sizeof(::items::Links)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::items::_Page_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::items::_Links_LinksEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::items::_Links_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "src/items.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017src/items.proto\022\005items\"\247\001\n\004Page\022\016\n\006lin"
      "k_1\030\001 \001(\t\022\016\n\006link_2\030\002 \001(\t\022\016\n\006link_3\030\003 \001("
      "\t\022\016\n\006link_4\030\004 \001(\t\022\016\n\006link_5\030\005 \001(\t\022\016\n\006lin"
      "k_6\030\006 \001(\t\022\016\n\006link_7\030\007 \001(\t\022\016\n\006link_8\030\010 \001("
      "\t\022\016\n\006link_9\030\t \001(\t\022\017\n\007link_10\030\n \001(\t\"j\n\005Li"
      "nks\022&\n\005links\030\001 \003(\0132\027.items.Links.LinksEn"
      "try\0329\n\nLinksEntry\022\013\n\003key\030\001 \001(\t\022\032\n\005value\030"
      "\002 \001(\0132\013.items.Page:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 310);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "src/items.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_src_2fitems_2eproto
namespace items {

// ===================================================================

void Page::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Page::kLink1FieldNumber;
const int Page::kLink2FieldNumber;
const int Page::kLink3FieldNumber;
const int Page::kLink4FieldNumber;
const int Page::kLink5FieldNumber;
const int Page::kLink6FieldNumber;
const int Page::kLink7FieldNumber;
const int Page::kLink8FieldNumber;
const int Page::kLink9FieldNumber;
const int Page::kLink10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Page::Page()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_src_2fitems_2eproto::InitDefaultsPage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:items.Page)
}
Page::Page(const Page& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_1().size() > 0) {
    link_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_1_);
  }
  link_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_2().size() > 0) {
    link_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_2_);
  }
  link_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_3().size() > 0) {
    link_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_3_);
  }
  link_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_4().size() > 0) {
    link_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_4_);
  }
  link_5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_5().size() > 0) {
    link_5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_5_);
  }
  link_6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_6().size() > 0) {
    link_6_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_6_);
  }
  link_7_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_7().size() > 0) {
    link_7_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_7_);
  }
  link_8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_8().size() > 0) {
    link_8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_8_);
  }
  link_9_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_9().size() > 0) {
    link_9_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_9_);
  }
  link_10_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_10().size() > 0) {
    link_10_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_10_);
  }
  // @@protoc_insertion_point(copy_constructor:items.Page)
}

void Page::SharedCtor() {
  link_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_7_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_9_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_10_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Page::~Page() {
  // @@protoc_insertion_point(destructor:items.Page)
  SharedDtor();
}

void Page::SharedDtor() {
  link_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_7_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_8_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_9_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_10_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Page::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Page::descriptor() {
  ::protobuf_src_2fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fitems_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Page& Page::default_instance() {
  ::protobuf_src_2fitems_2eproto::InitDefaultsPage();
  return *internal_default_instance();
}

Page* Page::New(::google::protobuf::Arena* arena) const {
  Page* n = new Page;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Page::Clear() {
// @@protoc_insertion_point(message_clear_start:items.Page)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_10_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Page::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:items.Page)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string link_1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_1().data(), static_cast<int>(this->link_1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_2().data(), static_cast<int>(this->link_2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_3().data(), static_cast<int>(this->link_3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_4()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_4().data(), static_cast<int>(this->link_4().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_4"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_5().data(), static_cast<int>(this->link_5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_6 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_6()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_6().data(), static_cast<int>(this->link_6().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_6"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_7 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_7()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_7().data(), static_cast<int>(this->link_7().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_7"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_8()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_8().data(), static_cast<int>(this->link_8().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_8"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_9 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_9()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_9().data(), static_cast<int>(this->link_9().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_9"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_10 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_10()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_10().data(), static_cast<int>(this->link_10().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Page.link_10"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:items.Page)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:items.Page)
  return false;
#undef DO_
}

void Page::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:items.Page)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string link_1 = 1;
  if (this->link_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_1().data(), static_cast<int>(this->link_1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->link_1(), output);
  }

  // string link_2 = 2;
  if (this->link_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_2().data(), static_cast<int>(this->link_2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->link_2(), output);
  }

  // string link_3 = 3;
  if (this->link_3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_3().data(), static_cast<int>(this->link_3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->link_3(), output);
  }

  // string link_4 = 4;
  if (this->link_4().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_4().data(), static_cast<int>(this->link_4().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->link_4(), output);
  }

  // string link_5 = 5;
  if (this->link_5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_5().data(), static_cast<int>(this->link_5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->link_5(), output);
  }

  // string link_6 = 6;
  if (this->link_6().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_6().data(), static_cast<int>(this->link_6().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_6");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->link_6(), output);
  }

  // string link_7 = 7;
  if (this->link_7().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_7().data(), static_cast<int>(this->link_7().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_7");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->link_7(), output);
  }

  // string link_8 = 8;
  if (this->link_8().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_8().data(), static_cast<int>(this->link_8().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_8");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->link_8(), output);
  }

  // string link_9 = 9;
  if (this->link_9().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_9().data(), static_cast<int>(this->link_9().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_9");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->link_9(), output);
  }

  // string link_10 = 10;
  if (this->link_10().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_10().data(), static_cast<int>(this->link_10().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_10");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->link_10(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:items.Page)
}

::google::protobuf::uint8* Page::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:items.Page)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string link_1 = 1;
  if (this->link_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_1().data(), static_cast<int>(this->link_1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->link_1(), target);
  }

  // string link_2 = 2;
  if (this->link_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_2().data(), static_cast<int>(this->link_2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->link_2(), target);
  }

  // string link_3 = 3;
  if (this->link_3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_3().data(), static_cast<int>(this->link_3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->link_3(), target);
  }

  // string link_4 = 4;
  if (this->link_4().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_4().data(), static_cast<int>(this->link_4().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->link_4(), target);
  }

  // string link_5 = 5;
  if (this->link_5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_5().data(), static_cast<int>(this->link_5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->link_5(), target);
  }

  // string link_6 = 6;
  if (this->link_6().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_6().data(), static_cast<int>(this->link_6().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_6");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->link_6(), target);
  }

  // string link_7 = 7;
  if (this->link_7().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_7().data(), static_cast<int>(this->link_7().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_7");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->link_7(), target);
  }

  // string link_8 = 8;
  if (this->link_8().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_8().data(), static_cast<int>(this->link_8().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_8");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->link_8(), target);
  }

  // string link_9 = 9;
  if (this->link_9().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_9().data(), static_cast<int>(this->link_9().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_9");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->link_9(), target);
  }

  // string link_10 = 10;
  if (this->link_10().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_10().data(), static_cast<int>(this->link_10().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "items.Page.link_10");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->link_10(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:items.Page)
  return target;
}

size_t Page::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:items.Page)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string link_1 = 1;
  if (this->link_1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_1());
  }

  // string link_2 = 2;
  if (this->link_2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_2());
  }

  // string link_3 = 3;
  if (this->link_3().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_3());
  }

  // string link_4 = 4;
  if (this->link_4().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_4());
  }

  // string link_5 = 5;
  if (this->link_5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_5());
  }

  // string link_6 = 6;
  if (this->link_6().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_6());
  }

  // string link_7 = 7;
  if (this->link_7().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_7());
  }

  // string link_8 = 8;
  if (this->link_8().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_8());
  }

  // string link_9 = 9;
  if (this->link_9().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_9());
  }

  // string link_10 = 10;
  if (this->link_10().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_10());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Page::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:items.Page)
  GOOGLE_DCHECK_NE(&from, this);
  const Page* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Page>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:items.Page)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:items.Page)
    MergeFrom(*source);
  }
}

void Page::MergeFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:items.Page)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.link_1().size() > 0) {

    link_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_1_);
  }
  if (from.link_2().size() > 0) {

    link_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_2_);
  }
  if (from.link_3().size() > 0) {

    link_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_3_);
  }
  if (from.link_4().size() > 0) {

    link_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_4_);
  }
  if (from.link_5().size() > 0) {

    link_5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_5_);
  }
  if (from.link_6().size() > 0) {

    link_6_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_6_);
  }
  if (from.link_7().size() > 0) {

    link_7_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_7_);
  }
  if (from.link_8().size() > 0) {

    link_8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_8_);
  }
  if (from.link_9().size() > 0) {

    link_9_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_9_);
  }
  if (from.link_10().size() > 0) {

    link_10_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_10_);
  }
}

void Page::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:items.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Page::CopyFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:items.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Page::IsInitialized() const {
  return true;
}

void Page::Swap(Page* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Page::InternalSwap(Page* other) {
  using std::swap;
  link_1_.Swap(&other->link_1_);
  link_2_.Swap(&other->link_2_);
  link_3_.Swap(&other->link_3_);
  link_4_.Swap(&other->link_4_);
  link_5_.Swap(&other->link_5_);
  link_6_.Swap(&other->link_6_);
  link_7_.Swap(&other->link_7_);
  link_8_.Swap(&other->link_8_);
  link_9_.Swap(&other->link_9_);
  link_10_.Swap(&other->link_10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Page::GetMetadata() const {
  protobuf_src_2fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fitems_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Links_LinksEntry_DoNotUse::Links_LinksEntry_DoNotUse() {}
Links_LinksEntry_DoNotUse::Links_LinksEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Links_LinksEntry_DoNotUse::MergeFrom(const Links_LinksEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Links_LinksEntry_DoNotUse::GetMetadata() const {
  ::protobuf_src_2fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fitems_2eproto::file_level_metadata[1];
}
void Links_LinksEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Links::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Links::kLinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Links::Links()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_src_2fitems_2eproto::InitDefaultsLinks();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:items.Links)
}
Links::Links(const Links& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  links_.MergeFrom(from.links_);
  // @@protoc_insertion_point(copy_constructor:items.Links)
}

void Links::SharedCtor() {
  _cached_size_ = 0;
}

Links::~Links() {
  // @@protoc_insertion_point(destructor:items.Links)
  SharedDtor();
}

void Links::SharedDtor() {
}

void Links::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Links::descriptor() {
  ::protobuf_src_2fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fitems_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Links& Links::default_instance() {
  ::protobuf_src_2fitems_2eproto::InitDefaultsLinks();
  return *internal_default_instance();
}

Links* Links::New(::google::protobuf::Arena* arena) const {
  Links* n = new Links;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Links::Clear() {
// @@protoc_insertion_point(message_clear_start:items.Links)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  links_.Clear();
  _internal_metadata_.Clear();
}

bool Links::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:items.Links)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .items.Page> links = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Links_LinksEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Links_LinksEntry_DoNotUse,
              ::std::string, ::items::Page,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::items::Page > > parser(&links_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "items.Links.LinksEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:items.Links)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:items.Links)
  return false;
#undef DO_
}

void Links::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:items.Links)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .items.Page> links = 1;
  if (!this->links().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::items::Page >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "items.Links.LinksEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->links().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->links().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::items::Page >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::items::Page >::const_iterator
          it = this->links().begin();
          it != this->links().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Links_LinksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(links_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Links_LinksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::items::Page >::const_iterator
          it = this->links().begin();
          it != this->links().end(); ++it) {
        entry.reset(links_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:items.Links)
}

::google::protobuf::uint8* Links::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:items.Links)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .items.Page> links = 1;
  if (!this->links().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::items::Page >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "items.Links.LinksEntry.key");
      }
    };

    if (deterministic &&
        this->links().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->links().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::items::Page >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::items::Page >::const_iterator
          it = this->links().begin();
          it != this->links().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Links_LinksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(links_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Links_LinksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::items::Page >::const_iterator
          it = this->links().begin();
          it != this->links().end(); ++it) {
        entry.reset(links_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:items.Links)
  return target;
}

size_t Links::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:items.Links)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .items.Page> links = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->links_size());
  {
    ::google::protobuf::scoped_ptr<Links_LinksEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::items::Page >::const_iterator
        it = this->links().begin();
        it != this->links().end(); ++it) {
      entry.reset(links_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Links::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:items.Links)
  GOOGLE_DCHECK_NE(&from, this);
  const Links* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Links>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:items.Links)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:items.Links)
    MergeFrom(*source);
  }
}

void Links::MergeFrom(const Links& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:items.Links)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  links_.MergeFrom(from.links_);
}

void Links::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:items.Links)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Links::CopyFrom(const Links& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:items.Links)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Links::IsInitialized() const {
  return true;
}

void Links::Swap(Links* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Links::InternalSwap(Links* other) {
  using std::swap;
  links_.Swap(&other->links_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Links::GetMetadata() const {
  protobuf_src_2fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fitems_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace items

// @@protoc_insertion_point(global_scope)
