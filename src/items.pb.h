// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/items.proto

#ifndef PROTOBUF_src_2fitems_2eproto__INCLUDED
#define PROTOBUF_src_2fitems_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_src_2fitems_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPageImpl();
void InitDefaultsPage();
void InitDefaultsLinks_LinksEntry_DoNotUseImpl();
void InitDefaultsLinks_LinksEntry_DoNotUse();
void InitDefaultsLinksImpl();
void InitDefaultsLinks();
inline void InitDefaults() {
  InitDefaultsPage();
  InitDefaultsLinks_LinksEntry_DoNotUse();
  InitDefaultsLinks();
}
}  // namespace protobuf_src_2fitems_2eproto
namespace items {
class Links;
class LinksDefaultTypeInternal;
extern LinksDefaultTypeInternal _Links_default_instance_;
class Links_LinksEntry_DoNotUse;
class Links_LinksEntry_DoNotUseDefaultTypeInternal;
extern Links_LinksEntry_DoNotUseDefaultTypeInternal _Links_LinksEntry_DoNotUse_default_instance_;
class Page;
class PageDefaultTypeInternal;
extern PageDefaultTypeInternal _Page_default_instance_;
}  // namespace items
namespace items {

// ===================================================================

class Page : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:items.Page) */ {
 public:
  Page();
  virtual ~Page();

  Page(const Page& from);

  inline Page& operator=(const Page& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Page(Page&& from) noexcept
    : Page() {
    *this = ::std::move(from);
  }

  inline Page& operator=(Page&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Page& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Page* internal_default_instance() {
    return reinterpret_cast<const Page*>(
               &_Page_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Page* other);
  friend void swap(Page& a, Page& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Page* New() const PROTOBUF_FINAL { return New(NULL); }

  Page* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Page& from);
  void MergeFrom(const Page& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Page* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string link_1 = 1;
  void clear_link_1();
  static const int kLink1FieldNumber = 1;
  const ::std::string& link_1() const;
  void set_link_1(const ::std::string& value);
  #if LANG_CXX11
  void set_link_1(::std::string&& value);
  #endif
  void set_link_1(const char* value);
  void set_link_1(const char* value, size_t size);
  ::std::string* mutable_link_1();
  ::std::string* release_link_1();
  void set_allocated_link_1(::std::string* link_1);

  // string link_2 = 2;
  void clear_link_2();
  static const int kLink2FieldNumber = 2;
  const ::std::string& link_2() const;
  void set_link_2(const ::std::string& value);
  #if LANG_CXX11
  void set_link_2(::std::string&& value);
  #endif
  void set_link_2(const char* value);
  void set_link_2(const char* value, size_t size);
  ::std::string* mutable_link_2();
  ::std::string* release_link_2();
  void set_allocated_link_2(::std::string* link_2);

  // string link_3 = 3;
  void clear_link_3();
  static const int kLink3FieldNumber = 3;
  const ::std::string& link_3() const;
  void set_link_3(const ::std::string& value);
  #if LANG_CXX11
  void set_link_3(::std::string&& value);
  #endif
  void set_link_3(const char* value);
  void set_link_3(const char* value, size_t size);
  ::std::string* mutable_link_3();
  ::std::string* release_link_3();
  void set_allocated_link_3(::std::string* link_3);

  // string link_4 = 4;
  void clear_link_4();
  static const int kLink4FieldNumber = 4;
  const ::std::string& link_4() const;
  void set_link_4(const ::std::string& value);
  #if LANG_CXX11
  void set_link_4(::std::string&& value);
  #endif
  void set_link_4(const char* value);
  void set_link_4(const char* value, size_t size);
  ::std::string* mutable_link_4();
  ::std::string* release_link_4();
  void set_allocated_link_4(::std::string* link_4);

  // string link_5 = 5;
  void clear_link_5();
  static const int kLink5FieldNumber = 5;
  const ::std::string& link_5() const;
  void set_link_5(const ::std::string& value);
  #if LANG_CXX11
  void set_link_5(::std::string&& value);
  #endif
  void set_link_5(const char* value);
  void set_link_5(const char* value, size_t size);
  ::std::string* mutable_link_5();
  ::std::string* release_link_5();
  void set_allocated_link_5(::std::string* link_5);

  // string link_6 = 6;
  void clear_link_6();
  static const int kLink6FieldNumber = 6;
  const ::std::string& link_6() const;
  void set_link_6(const ::std::string& value);
  #if LANG_CXX11
  void set_link_6(::std::string&& value);
  #endif
  void set_link_6(const char* value);
  void set_link_6(const char* value, size_t size);
  ::std::string* mutable_link_6();
  ::std::string* release_link_6();
  void set_allocated_link_6(::std::string* link_6);

  // string link_7 = 7;
  void clear_link_7();
  static const int kLink7FieldNumber = 7;
  const ::std::string& link_7() const;
  void set_link_7(const ::std::string& value);
  #if LANG_CXX11
  void set_link_7(::std::string&& value);
  #endif
  void set_link_7(const char* value);
  void set_link_7(const char* value, size_t size);
  ::std::string* mutable_link_7();
  ::std::string* release_link_7();
  void set_allocated_link_7(::std::string* link_7);

  // string link_8 = 8;
  void clear_link_8();
  static const int kLink8FieldNumber = 8;
  const ::std::string& link_8() const;
  void set_link_8(const ::std::string& value);
  #if LANG_CXX11
  void set_link_8(::std::string&& value);
  #endif
  void set_link_8(const char* value);
  void set_link_8(const char* value, size_t size);
  ::std::string* mutable_link_8();
  ::std::string* release_link_8();
  void set_allocated_link_8(::std::string* link_8);

  // string link_9 = 9;
  void clear_link_9();
  static const int kLink9FieldNumber = 9;
  const ::std::string& link_9() const;
  void set_link_9(const ::std::string& value);
  #if LANG_CXX11
  void set_link_9(::std::string&& value);
  #endif
  void set_link_9(const char* value);
  void set_link_9(const char* value, size_t size);
  ::std::string* mutable_link_9();
  ::std::string* release_link_9();
  void set_allocated_link_9(::std::string* link_9);

  // string link_10 = 10;
  void clear_link_10();
  static const int kLink10FieldNumber = 10;
  const ::std::string& link_10() const;
  void set_link_10(const ::std::string& value);
  #if LANG_CXX11
  void set_link_10(::std::string&& value);
  #endif
  void set_link_10(const char* value);
  void set_link_10(const char* value, size_t size);
  ::std::string* mutable_link_10();
  ::std::string* release_link_10();
  void set_allocated_link_10(::std::string* link_10);

  // @@protoc_insertion_point(class_scope:items.Page)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr link_1_;
  ::google::protobuf::internal::ArenaStringPtr link_2_;
  ::google::protobuf::internal::ArenaStringPtr link_3_;
  ::google::protobuf::internal::ArenaStringPtr link_4_;
  ::google::protobuf::internal::ArenaStringPtr link_5_;
  ::google::protobuf::internal::ArenaStringPtr link_6_;
  ::google::protobuf::internal::ArenaStringPtr link_7_;
  ::google::protobuf::internal::ArenaStringPtr link_8_;
  ::google::protobuf::internal::ArenaStringPtr link_9_;
  ::google::protobuf::internal::ArenaStringPtr link_10_;
  mutable int _cached_size_;
  friend struct ::protobuf_src_2fitems_2eproto::TableStruct;
  friend void ::protobuf_src_2fitems_2eproto::InitDefaultsPageImpl();
};
// -------------------------------------------------------------------

class Links_LinksEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Links_LinksEntry_DoNotUse, 
    ::std::string, ::items::Page,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Links_LinksEntry_DoNotUse, 
    ::std::string, ::items::Page,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Links_LinksEntry_DoNotUse();
  Links_LinksEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Links_LinksEntry_DoNotUse& other);
  static const Links_LinksEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Links_LinksEntry_DoNotUse*>(&_Links_LinksEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Links : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:items.Links) */ {
 public:
  Links();
  virtual ~Links();

  Links(const Links& from);

  inline Links& operator=(const Links& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Links(Links&& from) noexcept
    : Links() {
    *this = ::std::move(from);
  }

  inline Links& operator=(Links&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Links& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Links* internal_default_instance() {
    return reinterpret_cast<const Links*>(
               &_Links_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Links* other);
  friend void swap(Links& a, Links& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Links* New() const PROTOBUF_FINAL { return New(NULL); }

  Links* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Links& from);
  void MergeFrom(const Links& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Links* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .items.Page> links = 1;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::items::Page >&
      links() const;
  ::google::protobuf::Map< ::std::string, ::items::Page >*
      mutable_links();

  // @@protoc_insertion_point(class_scope:items.Links)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Links_LinksEntry_DoNotUse,
      ::std::string, ::items::Page,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > links_;
  mutable int _cached_size_;
  friend struct ::protobuf_src_2fitems_2eproto::TableStruct;
  friend void ::protobuf_src_2fitems_2eproto::InitDefaultsLinksImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Page

// string link_1 = 1;
inline void Page::clear_link_1() {
  link_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_1() const {
  // @@protoc_insertion_point(field_get:items.Page.link_1)
  return link_1_.GetNoArena();
}
inline void Page::set_link_1(const ::std::string& value) {
  
  link_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_1)
}
#if LANG_CXX11
inline void Page::set_link_1(::std::string&& value) {
  
  link_1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_1)
}
#endif
inline void Page::set_link_1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_1)
}
inline void Page::set_link_1(const char* value, size_t size) {
  
  link_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_1)
}
inline ::std::string* Page::mutable_link_1() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_1)
  return link_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_1() {
  // @@protoc_insertion_point(field_release:items.Page.link_1)
  
  return link_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_1(::std::string* link_1) {
  if (link_1 != NULL) {
    
  } else {
    
  }
  link_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_1);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_1)
}

// string link_2 = 2;
inline void Page::clear_link_2() {
  link_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_2() const {
  // @@protoc_insertion_point(field_get:items.Page.link_2)
  return link_2_.GetNoArena();
}
inline void Page::set_link_2(const ::std::string& value) {
  
  link_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_2)
}
#if LANG_CXX11
inline void Page::set_link_2(::std::string&& value) {
  
  link_2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_2)
}
#endif
inline void Page::set_link_2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_2)
}
inline void Page::set_link_2(const char* value, size_t size) {
  
  link_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_2)
}
inline ::std::string* Page::mutable_link_2() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_2)
  return link_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_2() {
  // @@protoc_insertion_point(field_release:items.Page.link_2)
  
  return link_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_2(::std::string* link_2) {
  if (link_2 != NULL) {
    
  } else {
    
  }
  link_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_2);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_2)
}

// string link_3 = 3;
inline void Page::clear_link_3() {
  link_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_3() const {
  // @@protoc_insertion_point(field_get:items.Page.link_3)
  return link_3_.GetNoArena();
}
inline void Page::set_link_3(const ::std::string& value) {
  
  link_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_3)
}
#if LANG_CXX11
inline void Page::set_link_3(::std::string&& value) {
  
  link_3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_3)
}
#endif
inline void Page::set_link_3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_3)
}
inline void Page::set_link_3(const char* value, size_t size) {
  
  link_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_3)
}
inline ::std::string* Page::mutable_link_3() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_3)
  return link_3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_3() {
  // @@protoc_insertion_point(field_release:items.Page.link_3)
  
  return link_3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_3(::std::string* link_3) {
  if (link_3 != NULL) {
    
  } else {
    
  }
  link_3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_3);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_3)
}

// string link_4 = 4;
inline void Page::clear_link_4() {
  link_4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_4() const {
  // @@protoc_insertion_point(field_get:items.Page.link_4)
  return link_4_.GetNoArena();
}
inline void Page::set_link_4(const ::std::string& value) {
  
  link_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_4)
}
#if LANG_CXX11
inline void Page::set_link_4(::std::string&& value) {
  
  link_4_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_4)
}
#endif
inline void Page::set_link_4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_4)
}
inline void Page::set_link_4(const char* value, size_t size) {
  
  link_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_4)
}
inline ::std::string* Page::mutable_link_4() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_4)
  return link_4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_4() {
  // @@protoc_insertion_point(field_release:items.Page.link_4)
  
  return link_4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_4(::std::string* link_4) {
  if (link_4 != NULL) {
    
  } else {
    
  }
  link_4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_4);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_4)
}

// string link_5 = 5;
inline void Page::clear_link_5() {
  link_5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_5() const {
  // @@protoc_insertion_point(field_get:items.Page.link_5)
  return link_5_.GetNoArena();
}
inline void Page::set_link_5(const ::std::string& value) {
  
  link_5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_5)
}
#if LANG_CXX11
inline void Page::set_link_5(::std::string&& value) {
  
  link_5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_5)
}
#endif
inline void Page::set_link_5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_5)
}
inline void Page::set_link_5(const char* value, size_t size) {
  
  link_5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_5)
}
inline ::std::string* Page::mutable_link_5() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_5)
  return link_5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_5() {
  // @@protoc_insertion_point(field_release:items.Page.link_5)
  
  return link_5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_5(::std::string* link_5) {
  if (link_5 != NULL) {
    
  } else {
    
  }
  link_5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_5);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_5)
}

// string link_6 = 6;
inline void Page::clear_link_6() {
  link_6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_6() const {
  // @@protoc_insertion_point(field_get:items.Page.link_6)
  return link_6_.GetNoArena();
}
inline void Page::set_link_6(const ::std::string& value) {
  
  link_6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_6)
}
#if LANG_CXX11
inline void Page::set_link_6(::std::string&& value) {
  
  link_6_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_6)
}
#endif
inline void Page::set_link_6(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_6)
}
inline void Page::set_link_6(const char* value, size_t size) {
  
  link_6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_6)
}
inline ::std::string* Page::mutable_link_6() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_6)
  return link_6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_6() {
  // @@protoc_insertion_point(field_release:items.Page.link_6)
  
  return link_6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_6(::std::string* link_6) {
  if (link_6 != NULL) {
    
  } else {
    
  }
  link_6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_6);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_6)
}

// string link_7 = 7;
inline void Page::clear_link_7() {
  link_7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_7() const {
  // @@protoc_insertion_point(field_get:items.Page.link_7)
  return link_7_.GetNoArena();
}
inline void Page::set_link_7(const ::std::string& value) {
  
  link_7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_7)
}
#if LANG_CXX11
inline void Page::set_link_7(::std::string&& value) {
  
  link_7_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_7)
}
#endif
inline void Page::set_link_7(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_7)
}
inline void Page::set_link_7(const char* value, size_t size) {
  
  link_7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_7)
}
inline ::std::string* Page::mutable_link_7() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_7)
  return link_7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_7() {
  // @@protoc_insertion_point(field_release:items.Page.link_7)
  
  return link_7_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_7(::std::string* link_7) {
  if (link_7 != NULL) {
    
  } else {
    
  }
  link_7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_7);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_7)
}

// string link_8 = 8;
inline void Page::clear_link_8() {
  link_8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_8() const {
  // @@protoc_insertion_point(field_get:items.Page.link_8)
  return link_8_.GetNoArena();
}
inline void Page::set_link_8(const ::std::string& value) {
  
  link_8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_8)
}
#if LANG_CXX11
inline void Page::set_link_8(::std::string&& value) {
  
  link_8_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_8)
}
#endif
inline void Page::set_link_8(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_8)
}
inline void Page::set_link_8(const char* value, size_t size) {
  
  link_8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_8)
}
inline ::std::string* Page::mutable_link_8() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_8)
  return link_8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_8() {
  // @@protoc_insertion_point(field_release:items.Page.link_8)
  
  return link_8_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_8(::std::string* link_8) {
  if (link_8 != NULL) {
    
  } else {
    
  }
  link_8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_8);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_8)
}

// string link_9 = 9;
inline void Page::clear_link_9() {
  link_9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_9() const {
  // @@protoc_insertion_point(field_get:items.Page.link_9)
  return link_9_.GetNoArena();
}
inline void Page::set_link_9(const ::std::string& value) {
  
  link_9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_9)
}
#if LANG_CXX11
inline void Page::set_link_9(::std::string&& value) {
  
  link_9_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_9)
}
#endif
inline void Page::set_link_9(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_9)
}
inline void Page::set_link_9(const char* value, size_t size) {
  
  link_9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_9)
}
inline ::std::string* Page::mutable_link_9() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_9)
  return link_9_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_9() {
  // @@protoc_insertion_point(field_release:items.Page.link_9)
  
  return link_9_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_9(::std::string* link_9) {
  if (link_9 != NULL) {
    
  } else {
    
  }
  link_9_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_9);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_9)
}

// string link_10 = 10;
inline void Page::clear_link_10() {
  link_10_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Page::link_10() const {
  // @@protoc_insertion_point(field_get:items.Page.link_10)
  return link_10_.GetNoArena();
}
inline void Page::set_link_10(const ::std::string& value) {
  
  link_10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:items.Page.link_10)
}
#if LANG_CXX11
inline void Page::set_link_10(::std::string&& value) {
  
  link_10_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:items.Page.link_10)
}
#endif
inline void Page::set_link_10(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:items.Page.link_10)
}
inline void Page::set_link_10(const char* value, size_t size) {
  
  link_10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:items.Page.link_10)
}
inline ::std::string* Page::mutable_link_10() {
  
  // @@protoc_insertion_point(field_mutable:items.Page.link_10)
  return link_10_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Page::release_link_10() {
  // @@protoc_insertion_point(field_release:items.Page.link_10)
  
  return link_10_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Page::set_allocated_link_10(::std::string* link_10) {
  if (link_10 != NULL) {
    
  } else {
    
  }
  link_10_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_10);
  // @@protoc_insertion_point(field_set_allocated:items.Page.link_10)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Links

// map<string, .items.Page> links = 1;
inline int Links::links_size() const {
  return links_.size();
}
inline void Links::clear_links() {
  links_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::items::Page >&
Links::links() const {
  // @@protoc_insertion_point(field_map:items.Links.links)
  return links_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::items::Page >*
Links::mutable_links() {
  // @@protoc_insertion_point(field_mutable_map:items.Links.links)
  return links_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace items

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_src_2fitems_2eproto__INCLUDED
